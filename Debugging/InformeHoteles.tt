<#@ template inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" language="C#" hostspecific="True"#>
<#@ output extension=".txt" #>
<#@ JRPPCLMCFProyectoIPS processor="JRPPCLMCFProyectoIPSDirectiveProcessor" requires="fileName='Test.JRPPCLMCFProyectoIPS'" #>
<#@ include file="EF.utility.CS.ttinclude" #>

<# 
	
//MAIN
	if (this.TapizClassWeb.Clase.Count==0) 
		//Si no hay ninguna clase creada
		WriteLine("Solucion vacía. No se ha configurado ninguna clase");
	else{ 

		//Inicializa la creacion de ficheros
		var fileManager=EntityFrameworkTemplateFileManager.Create(this); 

		//Recorremos todas las clases creadas en el tapiz
		foreach(Clase clase in this.TapizClassWeb.Clase){
			
			//Comprobamos si la clase es enriquecida
			bool enriquecida=false;
			if(clase is ClaseEnriquecida)
				enriquecida=true;

			//Llamamos a cada metodo por cada clase para generar el .html y .java
			generarHome(clase, fileManager, enriquecida); 
			generarAlta(clase, fileManager, enriquecida);
			generarListado(clase, fileManager, enriquecida);
			//Parametros (clase: cada clase contenida en el tapiz, filemanager: gestor de creacion de ficheros, enriquecida(bool): indica si la clase es enriquecida o no)
			
		}

		//Cierra la creacion de ficheros
		fileManager.Process();
	}

#>
<#+
//METODO PARA GENERAR HTML DE CADA CLASE_HOME
	void generarHome(Clase clase, EntityFrameworkTemplateFileManager fileManager, bool enriquecida){

		//Crea un fichero donde pondremos la home de cada clase
		fileManager.StartNewFile(clase.nombre+"Home.html");

		//Asignacion de estilos de la clase, dependiendo de si es enriquecida o no
		string tipoLetra="Arial";
		string colorLetra="#000000";
		string alineacion="center";
		string colorFondo="#00aabb";

		//coger estilos de EstiloClase (FUNCIONA)
		if(enriquecida){ 
			ClaseEnriquecida claseEnriquecida= (ClaseEnriquecida)clase; //La casteamos en ClaseEnriquecida
			if(claseEnriquecida.EstiloClase==null) 
				WriteLine("No hay estilos de clase");
			else{					 
				EstiloClase estiloClase = (EstiloClase) claseEnriquecida.EstiloClase;
				tipoLetra= estiloClase.tipoLetraCalculado;  
				colorLetra= estiloClase.colorLetraCalculado;
				alineacion= estiloClase.alineacionCalculado;
				colorFondo= estiloClase.colorFondoCalculado;				
			}
		}


		WriteLine("<html>"); 
		WriteLine("<head>"); 
		WriteLine("<title>"+clase.nombre+"Home</title>");
		WriteLine("</head>"); 
		WriteLine("<body>"); 
		WriteLine("<div style='border: 1px solid black; margin:20px'>"); 

		
		WriteLine("<form name='"+clase.nombre+"' style='background-color:"+colorFondo+"; color:"+colorLetra+";font-family:"+tipoLetra+";text-align:"+alineacion+";'>");
		WriteLine("<h1>"+clase.nombre+"</h1>"); 

		//Boton para alta
		WriteLine("<button style='color:"+colorLetra+";font-family:"+tipoLetra+"'> <a href='./"+clase.nombre+"Alta.html'>Alta</a> </button>"); 
	
		//Boton para listado
		WriteLine("<button style='color:"+colorLetra+";font-family:"+tipoLetra+"'> <a href='./"+clase.nombre+"Listado.html'>Listado</a> </button>"); 

		WriteLine("</form>"); 
		WriteLine("</div>"); 
		WriteLine("</body>"); 
		WriteLine("</html>"); 
	}
#>
<#+ 
//METODO PARA GENERAR HTML DE CADA CLASE_ALTA

	void generarAlta(Clase clase, EntityFrameworkTemplateFileManager fileManager, bool enriquecida){
		
		//Crea un fichero donde pondremos el alta de cada clase
		fileManager.StartNewFile(clase.nombre+"Alta.html");
	

		//Asignacion de estilos de la clase, dependiendo de si es enriquecida o no
		string tipoLetra="Arial";
		string colorLetra="#000000";
		string alineacion="center";
		string colorFondo="#00aabb";

		//coger estilos de EstiloClase (FUNCIONA)
		if(enriquecida){ 
			ClaseEnriquecida claseEnriquecida= (ClaseEnriquecida)clase; //La casteamos en ClaseEnriquecida
			if(claseEnriquecida.EstiloClase==null) 
				WriteLine("No hay estilos de clase");
			else{					 
				EstiloClase estiloClase = (EstiloClase) claseEnriquecida.EstiloClase;
				tipoLetra= estiloClase.tipoLetraCalculado;  
				colorLetra= estiloClase.colorLetraCalculado;
				alineacion= estiloClase.alineacionCalculado; 
				colorFondo= estiloClase.colorFondoCalculado;				
			}
		}


		WriteLine("<html>"); 
		WriteLine("<head>"); 
		WriteLine("<title>"+clase.nombre+"Alta</title>");
		WriteLine("</head>"); 
		WriteLine("<body>"); 
		WriteLine("<div style='border: 1px solid black; margin:20px'>"); 
		WriteLine("<p style='background-color: "+colorFondo+"; color:"+colorLetra+"; font-weight:bold; font-family:"+tipoLetra+"; text-align:"+alineacion+"'> Alta"+clase.nombre+"</p>");
		WriteLine("<form name='"+clase.nombre+"' style='background-color:#00aabb; color:#ffffff;font-family:Arial;text-align:center;'>");
		WriteLine("<table>");

		//Recorremos los atributos y añadimos una fila a la tabla por cada uno
		if(clase.Atributo.Count==0)
			WriteLine("No hay atributos");
		else
			foreach(Atributo atributo in clase.Atributo){
				WriteLine("<tr><td style='color:#000000; font-family:Arial;'>"+atributo.nombre+"<input type='text' id='"+atributo.nombre+"'></td></tr>");	
			}


		WriteLine("</table>");

		//Botones
		WriteLine("<button style='color:#000000; font-family:Arial;'><a href="+clase.nombre+".html>Guardar</a></button>");
		WriteLine("<button style='color:#000000; font-family:Arial;'><a href="+clase.nombre+"Home.html>Volver</a></button>");

		WriteLine("</form>");
		WriteLine("</div>");
		WriteLine("</body>");
		WriteLine("</html>");

	}
	
#>
<#+

//METODO PARA GENERAR HTML DE CADA CLASE_LISTADO
	void generarListado(Clase clase, EntityFrameworkTemplateFileManager fileManager, bool enriquecida){

		//Crea un fichero donde pondremos el listado de cada clase
		fileManager.StartNewFile(clase.nombre+"Lista.html");

		
		//Asignacion de estilos de la clase, dependiendo de si es enriquecida o no
		string tipoLetra="Arial";
		string colorLetra="#000000";
		string alineacion="center";
		string colorFondo="#00aabb";

		//coger estilos de EstiloClase (FUNCIONA)
		if(enriquecida){ 
			ClaseEnriquecida claseEnriquecida= (ClaseEnriquecida)clase; //La casteamos en ClaseEnriquecida
			if(claseEnriquecida.EstiloClase==null) 
				WriteLine("No hay estilos de clase");
			else{					 
				EstiloClase estiloClase = (EstiloClase) claseEnriquecida.EstiloClase;
				tipoLetra= estiloClase.tipoLetraCalculado;  
				colorLetra= estiloClase.colorLetraCalculado;
				alineacion= estiloClase.alineacionCalculado; 
				colorFondo= estiloClase.colorFondoCalculado;				
			}
		}


	    WriteLine("<body>");
	    WriteLine("<div style='border:1px solid black; margin:20px'>");
		WriteLine("<h2>Listado " + clase.nombre + "</h2>");
		WriteLine("<p style='background-color: "+colorFondo+"; color:"+colorLetra+"; font-weight:bold; font-family:"+tipoLetra+"; text-align:"+alineacion+"'> Listado "+clase.nombre+"</p>");
		WriteLine("<form name='"+clase.nombre+"' style='background-color:#00aabb; color:#ffffff;font-family:Arial;text-align:center;'>");
		WriteLine("<table>");

       //PRIMER ELEMENTO
       WriteLine("<tr>");
       WriteLine("<td>Elemento 1: " + clase.nombre + " </td>");
       WriteLine("<td>");
       WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Consultar</a> </button>");
       WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Modificar</a> </button>");
       WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Eliminar</a> </button>");
	   WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">GeneraCertificadoNota</a> </button>");
	   WriteLine(" </td>");
	   WriteLine(" </tr>");

	  //SEGUNDO ELEMENTO
	 WriteLine("<tr>");
	 WriteLine("<td>Elemento 2: " + clase.nombre + " </td>");
     WriteLine("<td>");
     WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Consultar</a> </button>");
     WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Modificar</a> </button>");
	 WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Eliminar</a> </button>");
     WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">GeneraCertificadoNota</a> </button>");
     WriteLine(" </td>");
     WriteLine(" </tr>");

    //TERCER ELEMENTO
	WriteLine("<tr>");
	WriteLine("<td>Elemento 3: " + clase.nombre + " </td>");
	WriteLine("<td>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Consultar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Modificar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Eliminar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">GeneraCertificadoNota</a> </button>");
	WriteLine(" </td>");
	WriteLine(" </tr>");

	//CUARTO ELEMENTO
	WriteLine("<tr>");
	WriteLine("<td>Elemento 4: " + clase.nombre + " </td>");
	WriteLine("<td>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Consultar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Modificar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">Eliminar</a> </button>");
	WriteLine("<button style='color:" + colorFondo + ";font-family:" + tipoLetra + "'> <a href=" + clase.nombre + ">GeneraCertificadoNota</a> </button>");
	WriteLine(" </td>");
	WriteLine(" </tr>");

	WriteLine("</table>");
	   
           

		
	}


#>
